using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using SIMS;
public partial class SIMS_Pages_SAPIntregate : System.Web.UI.Page
{
    SIMSCommonClass objCommonClass = new SIMSCommonClass();
    SpareRequirementIndentConfirm objSpareRequirementIndentConfirm = new SpareRequirementIndentConfirm();
    SIMS.SIMS_SAPCO objSims = new SIMS.SIMS_SAPCO();
    DataRow objDr, objDr1;    
    protected void Page_Load(object sender, EventArgs e)
    {

    }
    protected void imgBtnSAP_Click(object sender, EventArgs e)
    {
        lblmsg.Text = "";
        DateTime theDate = DateTime.Now;
         

        
            //row.Cells[2].Text;

            DataTable dtMaterial = new DataTable();
            DataTable dtPartner = new DataTable();

            string strSO;
            objSims.CLIENT = "530";
            objSims.User = "it-srini";
            objSims.Password = "srini1";
            objSims.Lang = "EN";
            objSims.ASHOST = "192.168.60.155";
            objSims.SYSNR = "07";

            objSims.OrderType = "ZBV";
            objSims.DistChannel = "BR";
              objSims.Division = "M5";
          //  objSims.Division = hdnProductDivId.Value;
            objSims.SalesOrganization = "CP00";
             objSims.PONumber = "SIN10419151531810";
           // objSims.PONumber = txtPONumber.Text.Trim();
            //  objSims.PODate = "20100630";//DateTime.Now.ToString(); 
            objSims.PODate = theDate.ToString("yyyyMMdd");


            objSims.CustomerCode = "NAAA0062";
            objSims.CustomerTaxForm = "1A";//1A
            objSims.Incoterms1 = "FOB";
            objSims.Incoterms2 = ""; //MUM
            objSims.PaymentTerms = "0001";
            objSims.OrderReason = "";

            dtMaterial.Columns.Add("ITM_NUMBER", typeof(String));
            dtMaterial.Columns.Add("HG_LV_ITEM", typeof(String));
            dtMaterial.Columns.Add("PO_ITM_NO", typeof(String));
            dtMaterial.Columns.Add("MATERIAL", typeof(String));
            dtMaterial.Columns.Add("CUST_MAT", typeof(String));
            dtMaterial.Columns.Add("BATCH", typeof(String));
            dtMaterial.Columns.Add("DLV_GROUP", typeof(String));
            dtMaterial.Columns.Add("PART_DLV", typeof(String));
            dtMaterial.Columns.Add("REASON_REJ", typeof(String));
            dtMaterial.Columns.Add("BILL_BLOCK", typeof(String));
            dtMaterial.Columns.Add("BILL_DATE", typeof(String));
            dtMaterial.Columns.Add("PLANT", typeof(String));
            dtMaterial.Columns.Add("STORE_LOC", typeof(String));
            dtMaterial.Columns.Add("TARGET_QTY", typeof(String));
            dtMaterial.Columns.Add("TARGET_QU", typeof(String));
            dtMaterial.Columns.Add("REQ_QTY", typeof(String));
            dtMaterial.Columns.Add("SALES_UNIT", typeof(String));
            dtMaterial.Columns.Add("ITEM_CATEG", typeof(String));
            dtMaterial.Columns.Add("SHORT_TEXT", typeof(String));
            dtMaterial.Columns.Add("REQ_DATE", typeof(String));
            dtMaterial.Columns.Add("DATE_TYPE", typeof(String));
            dtMaterial.Columns.Add("REQ_TIME", typeof(String));
            dtMaterial.Columns.Add("COND_TYPE", typeof(String));
            dtMaterial.Columns.Add("COND_VALUE", typeof(Decimal));
            dtMaterial.Columns.Add("COND_P_UNT", typeof(String));
            dtMaterial.Columns.Add("COND_D_UNT", typeof(String));
            dtMaterial.Columns.Add("PRC_GROUP1", typeof(String));
            dtMaterial.Columns.Add("PRC_GROUP2", typeof(String));
            dtMaterial.Columns.Add("PRC_GROUP3", typeof(String));
            dtMaterial.Columns.Add("PRC_GROUP4", typeof(String));
            dtMaterial.Columns.Add("PRC_GROUP5", typeof(String));
            dtMaterial.Columns.Add("PROD_HIERA", typeof(String));
            dtMaterial.Columns.Add("MATL_GROUP", typeof(String));
            dtMaterial.Columns.Add("PURCH_NO_C", typeof(String));
            dtMaterial.Columns.Add("PURCH_DATE", typeof(String));
            dtMaterial.Columns.Add("PO_METHOD", typeof(String));
            dtMaterial.Columns.Add("REF_1", typeof(String));
            dtMaterial.Columns.Add("PURCH_NO_S", typeof(String));
            dtMaterial.Columns.Add("PO_DAT_S", typeof(String));
            dtMaterial.Columns.Add("PO_METH_S", typeof(String));
            dtMaterial.Columns.Add("REF_1_S", typeof(String));
            dtMaterial.Columns.Add("PO_ITM_NO_S", typeof(String));
            dtMaterial.Columns.Add("COND_VAL1", typeof(Decimal));
            dtMaterial.Columns.Add("CURRENCY", typeof(String));
            dtMaterial.Columns.Add("CURR_ISO", typeof(String));
            dtMaterial.Columns.Add("T_UNIT_ISO", typeof(String));
            dtMaterial.Columns.Add("S_UNIT_ISO", typeof(String));
            dtMaterial.Columns.Add("CD_UNT_ISO", typeof(String));
            dtMaterial.Columns.Add("CUST_MAT35", typeof(String));
            dtMaterial.Columns.Add("INCOTERMS1", typeof(String));
            dtMaterial.Columns.Add("INCOTERMS2", typeof(String));
            dtMaterial.Columns.Add("DLV_TIME", typeof(String));
            dtMaterial.Columns.Add("ASSORT_MOD", typeof(String));
            dtMaterial.Columns.Add("VAL_CONTR", typeof(String));
            dtMaterial.Columns.Add("VAL_CON_I", typeof(String));
            dtMaterial.Columns.Add("REF_DOC", typeof(String));
            dtMaterial.Columns.Add("REF_DOC_IT", typeof(String));
            dtMaterial.Columns.Add("REF_DOC_CA", typeof(String));
            dtMaterial.Columns.Add("CD_TYPE2", typeof(String));
            dtMaterial.Columns.Add("CD_VALUE2", typeof(Decimal));
            dtMaterial.Columns.Add("CD_P_UNT2", typeof(String));
            dtMaterial.Columns.Add("CD_D_UNT2", typeof(String));
            dtMaterial.Columns.Add("CD_D_UISO2", typeof(String));
            dtMaterial.Columns.Add("CD_CURR2", typeof(String));
            dtMaterial.Columns.Add("CD_CU_ISO2", typeof(String));
            dtMaterial.Columns.Add("CD_TYPE3", typeof(String));
            dtMaterial.Columns.Add("CD_VALUE3", typeof(Decimal));
            dtMaterial.Columns.Add("CD_P_UNT3", typeof(String));
            dtMaterial.Columns.Add("CD_D_UNT3", typeof(String));
            dtMaterial.Columns.Add("CD_D_UISO3", typeof(String));
            dtMaterial.Columns.Add("CD_CURR3", typeof(String));
            dtMaterial.Columns.Add("CD_CU_ISO3", typeof(String));
            dtMaterial.Columns.Add("CD_TYPE4", typeof(String));
            dtMaterial.Columns.Add("CD_VALUE4", typeof(Decimal));
            dtMaterial.Columns.Add("CD_P_UNT4", typeof(String));
            dtMaterial.Columns.Add("CD_D_UNT4", typeof(String));
            dtMaterial.Columns.Add("CD_D_UISO4", typeof(String));
            dtMaterial.Columns.Add("CD_CURR4", typeof(String));
            dtMaterial.Columns.Add("CD_CU_ISO4", typeof(String));
            dtMaterial.Columns.Add("MAT_EXT", typeof(String));
            dtMaterial.Columns.Add("MAT_GUID", typeof(String));
            dtMaterial.Columns.Add("MAT_VERS", typeof(String));
            dtMaterial.Columns.Add("ALTERN_BOM", typeof(String));
            dtMaterial.Columns.Add("FKK_CONACCT", typeof(String));
            dtMaterial.Columns.Add("EAN_UPC", typeof(String));
            dtMaterial.Columns.Add("SHIP_POINT", typeof(String));
            dtMaterial.Columns.Add("PRODCAT", typeof(String));


            objDr = dtMaterial.NewRow();

            objDr["ITM_NUMBER"] = "000100";
            objDr["HG_LV_ITEM"] = "0";
            objDr["PO_ITM_NO"] = "";
            objDr["MATERIAL"] = "SM002J";//Pumps
            objDr["CUST_MAT"] = "";
            objDr["BATCH"] = "";
            objDr["DLV_GROUP"] = "";
            objDr["PART_DLV"] = "";
            objDr["REASON_REJ"] = "";
            objDr["BILL_BLOCK"] = "";
            objDr["BILL_DATE"] = "";
               objDr["PLANT"] = "EBBB";
            //objDr["PLANT"] = strPnalntCode;
            objDr["STORE_LOC"] = "Z1SP";//
            objDr["TARGET_QTY"] = "4000";
            objDr["TARGET_QU"] = "";
            objDr["REQ_QTY"] = "4000";
            objDr["SALES_UNIT"] = "";
            objDr["ITEM_CATEG"] = "";
            objDr["SHORT_TEXT"] = "";
            objDr["REQ_DATE"] = "";
            objDr["DATE_TYPE"] = "";
            objDr["REQ_TIME"] = "";
            objDr["COND_TYPE"] = "";
            objDr["COND_VALUE"] = Convert.ToDecimal("0.00"); ;
            objDr["COND_P_UNT"] = "";
            objDr["COND_D_UNT"] = "";
            objDr["PRC_GROUP1"] = "";
            objDr["PRC_GROUP2"] = "";
            objDr["PRC_GROUP3"] = "";
            objDr["PRC_GROUP4"] = "";
            objDr["PRC_GROUP5"] = "";
            objDr["PROD_HIERA"] = "";
            objDr["MATL_GROUP"] = "";
            objDr["PURCH_NO_C"] = "";
            objDr["PURCH_DATE"] = "";
            objDr["PO_METHOD"] = "";
            objDr["REF_1"] = "";
            objDr["PURCH_NO_S"] = "";
            objDr["PO_DAT_S"] = "";
            objDr["PO_METH_S"] = "";
            objDr["REF_1_S"] = "";
            objDr["PO_ITM_NO_S"] = "";
            objDr["COND_VAL1"] = Convert.ToDecimal("0.00");
            objDr["CURRENCY"] = "";
            objDr["CURR_ISO"] = "";
            objDr["T_UNIT_ISO"] = "";
            objDr["S_UNIT_ISO"] = "";
            objDr["CD_UNT_ISO"] = "";
            objDr["CUST_MAT35"] = "";
            objDr["INCOTERMS1"] = "";
            objDr["INCOTERMS2"] = "";
            objDr["DLV_TIME"] = "";
            objDr["ASSORT_MOD"] = "";
            objDr["VAL_CONTR"] = "";
            objDr["VAL_CON_I"] = "";
            objDr["REF_DOC"] = "";
            objDr["REF_DOC_IT"] = "";
            objDr["REF_DOC_CA"] = "";
            objDr["CD_TYPE2"] = "";
            objDr["CD_VALUE2"] = Convert.ToDecimal("0.00");
            objDr["CD_P_UNT2"] = "";
            objDr["CD_D_UNT2"] = "";
            objDr["CD_D_UISO2"] = "";
            objDr["CD_CURR2"] = "";
            objDr["CD_CU_ISO2"] = "";
            objDr["CD_TYPE3"] = "";
            objDr["CD_VALUE3"] = Convert.ToDecimal("0.00");
            objDr["CD_P_UNT3"] = "";
            objDr["CD_D_UNT3"] = "";
            objDr["CD_D_UISO3"] = "";
            objDr["CD_CURR3"] = "";
            objDr["CD_CU_ISO3"] = "";
            objDr["CD_TYPE4"] = "";
            objDr["CD_VALUE4"] = "0";
            objDr["CD_P_UNT4"] = "";
            objDr["CD_D_UNT4"] = "";
            objDr["CD_D_UISO4"] = "";
            objDr["CD_CURR4"] = "";
            objDr["CD_CU_ISO4"] = "";
            objDr["MAT_EXT"] = "";
            objDr["MAT_GUID"] = "";
            objDr["MAT_VERS"] = "";
            objDr["ALTERN_BOM"] = "";
            objDr["FKK_CONACCT"] = "";
            objDr["EAN_UPC"] = "";
            objDr["SHIP_POINT"] = "";
            objDr["PRODCAT"] = "";

            dtMaterial.Rows.Add(objDr);
            objSims.MaterialTable = dtMaterial;
            //--------------------------
            //objDr = dtMaterial.NewRow();

            //objDr["ITM_NUMBER"] = "102";
            //objDr["HG_LV_ITEM"] = "0";
            //objDr["PO_ITM_NO"] = "";
            //objDr["MATERIAL"] = "SM002J";
            //objDr["CUST_MAT"] = "";
            //objDr["BATCH"] = "";
            //objDr["DLV_GROUP"] = "";
            //objDr["PART_DLV"] = "";
            //objDr["REASON_REJ"] = "";
            //objDr["BILL_BLOCK"] = "";
            //objDr["BILL_DATE"] = "";
            //objDr["PLANT"] = "EBBB";
            //objDr["STORE_LOC"] = "Z1SP";//
            //objDr["TARGET_QTY"] = "50000";
            //objDr["TARGET_QU"] = "";
            //objDr["REQ_QTY"] = "50000";
            //objDr["SALES_UNIT"] = "";
            //objDr["ITEM_CATEG"] = "";
            //objDr["SHORT_TEXT"] = "";
            //objDr["REQ_DATE"] = "";
            //objDr["DATE_TYPE"] = "";
            //objDr["REQ_TIME"] = "";
            //objDr["COND_TYPE"] = "";
            //objDr["COND_VALUE"] = Convert.ToDecimal("0.00"); ;
            //objDr["COND_P_UNT"] = "";
            //objDr["COND_D_UNT"] = "";
            //objDr["PRC_GROUP1"] = "";
            //objDr["PRC_GROUP2"] = "";
            //objDr["PRC_GROUP3"] = "";
            //objDr["PRC_GROUP4"] = "";
            //objDr["PRC_GROUP5"] = "";
            //objDr["PROD_HIERA"] = "";
            //objDr["MATL_GROUP"] = "";
            //objDr["PURCH_NO_C"] = "";
            //objDr["PURCH_DATE"] = "";
            //objDr["PO_METHOD"] = "";
            //objDr["REF_1"] = "";
            //objDr["PURCH_NO_S"] = "";
            //objDr["PO_DAT_S"] = "";
            //objDr["PO_METH_S"] = "";
            //objDr["REF_1_S"] = "";
            //objDr["PO_ITM_NO_S"] = "";
            //objDr["COND_VAL1"] = Convert.ToDecimal("0.00");
            //objDr["CURRENCY"] = "";
            //objDr["CURR_ISO"] = "";
            //objDr["T_UNIT_ISO"] = "";
            //objDr["S_UNIT_ISO"] = "";
            //objDr["CD_UNT_ISO"] = "";
            //objDr["CUST_MAT35"] = "";
            //objDr["INCOTERMS1"] = "";
            //objDr["INCOTERMS2"] = "";
            //objDr["DLV_TIME"] = "";
            //objDr["ASSORT_MOD"] = "";
            //objDr["VAL_CONTR"] = "";
            //objDr["VAL_CON_I"] = "";
            //objDr["REF_DOC"] = "";
            //objDr["REF_DOC_IT"] = "";
            //objDr["REF_DOC_CA"] = "";
            //objDr["CD_TYPE2"] = "";
            //objDr["CD_VALUE2"] = Convert.ToDecimal("0.00");
            //objDr["CD_P_UNT2"] = "";
            //objDr["CD_D_UNT2"] = "";
            //objDr["CD_D_UISO2"] = "";
            //objDr["CD_CURR2"] = "";
            //objDr["CD_CU_ISO2"] = "";
            //objDr["CD_TYPE3"] = "";
            //objDr["CD_VALUE3"] = Convert.ToDecimal("0.00");
            //objDr["CD_P_UNT3"] = "";
            //objDr["CD_D_UNT3"] = "";
            //objDr["CD_D_UISO3"] = "";
            //objDr["CD_CURR3"] = "";
            //objDr["CD_CU_ISO3"] = "";
            //objDr["CD_TYPE4"] = "";
            //objDr["CD_VALUE4"] = "0";
            //objDr["CD_P_UNT4"] = "";
            //objDr["CD_D_UNT4"] = "";
            //objDr["CD_D_UISO4"] = "";
            //objDr["CD_CURR4"] = "";
            //objDr["CD_CU_ISO4"] = "";
            //objDr["MAT_EXT"] = "";
            //objDr["MAT_GUID"] = "";
            //objDr["MAT_VERS"] = "";
            //objDr["ALTERN_BOM"] = "";
            //objDr["FKK_CONACCT"] = "";
            //objDr["EAN_UPC"] = "";
            //objDr["SHIP_POINT"] = "";
            //objDr["PRODCAT"] = "";

          //  dtMaterial.Rows.Add(objDr);
         //   objSims.MaterialTable = dtMaterial;
            //---------------------------
            dtPartner.Columns.Add("PARTN_ROLE", typeof(String));
            dtPartner.Columns.Add("PARTN_NUMB", typeof(String));
            dtPartner.Columns.Add("ITM_NUMBER", typeof(String));
            dtPartner.Columns.Add("TITLE", typeof(String));
            dtPartner.Columns.Add("NAME", typeof(String));
            dtPartner.Columns.Add("NAME_2", typeof(String));
            dtPartner.Columns.Add("NAME_3", typeof(String));
            dtPartner.Columns.Add("NAME_4", typeof(String));
            dtPartner.Columns.Add("STREET", typeof(String));
            dtPartner.Columns.Add("COUNTRY", typeof(String));
            dtPartner.Columns.Add("COUNTRY_ISO", typeof(String));
            dtPartner.Columns.Add("POSTL_CODE", typeof(String));
            dtPartner.Columns.Add("POBX_PCD", typeof(String));
            dtPartner.Columns.Add("POBX_CTY", typeof(String));
            dtPartner.Columns.Add("CITY", typeof(String));
            dtPartner.Columns.Add("DISTRICT", typeof(String));
            dtPartner.Columns.Add("REGION", typeof(String));
            dtPartner.Columns.Add("PO_BOX", typeof(String));
            dtPartner.Columns.Add("TELEPHONE", typeof(String));
            dtPartner.Columns.Add("TELEPHONE2", typeof(String));
            dtPartner.Columns.Add("TELEBOX", typeof(String));
            dtPartner.Columns.Add("FAX_NUMBER", typeof(String));
            dtPartner.Columns.Add("TELETEX_NO", typeof(String));
            dtPartner.Columns.Add("TELEX_NO", typeof(String));
            dtPartner.Columns.Add("LANGU", typeof(String));
            dtPartner.Columns.Add("LANGU_ISO", typeof(String));
            dtPartner.Columns.Add("UNLOAD_PT", typeof(String));
            dtPartner.Columns.Add("TRANSPZONE", typeof(String));
            dtPartner.Columns.Add("TAXJURCODE", typeof(String));
            dtPartner.Columns.Add("ADDRESS", typeof(String));
            dtPartner.Columns.Add("PRIV_ADDR", typeof(String));
            dtPartner.Columns.Add("ADDR_TYPE", typeof(String));
            dtPartner.Columns.Add("ADDR_ORIG", typeof(String));
            dtPartner.Columns.Add("ADDR_LINK", typeof(String));
            dtPartner.Columns.Add("VAT_REG_NO", typeof(String));

            objDr1 = dtPartner.NewRow();
            objDr1["PARTN_ROLE"] = "WE";
            objDr1["PARTN_NUMB"] = "WBA1894";
            objDr1["ITM_NUMBER"] = "00001";
            objDr1["TITLE"] = "";
            objDr1["NAME"] = "";
            objDr1["NAME_2"] = "";
            objDr1["NAME_3"] = "";
            objDr1["NAME_4"] = "";
            objDr1["STREET"] = "";
            objDr1["COUNTRY"] = "";
            objDr1["COUNTRY_ISO"] = "";
            objDr1["POSTL_CODE"] = "";
            objDr1["POBX_PCD"] = "";
            objDr1["POBX_CTY"] = "";
            objDr1["CITY"] = "";
            objDr1["DISTRICT"] = "";
            objDr1["REGION"] = "";
            objDr1["PO_BOX"] = "";
            objDr1["TELEPHONE"] = "";
            objDr1["TELEPHONE2"] = "";
            objDr1["TELEBOX"] = "";
            objDr1["FAX_NUMBER"] = "";
            objDr1["TELETEX_NO"] = "";
            objDr1["TELEX_NO"] = "";
            objDr1["LANGU"] = "";
            objDr1["LANGU_ISO"] = "";
            objDr1["UNLOAD_PT"] = "";
            objDr1["TRANSPZONE"] = "";
            objDr1["TAXJURCODE"] = "";
            objDr1["ADDRESS"] = "";
            objDr1["PRIV_ADDR"] = "";
            objDr1["ADDR_TYPE"] = "";
            objDr1["ADDR_ORIG"] = "";
            objDr1["ADDR_LINK"] = "";
            objDr1["VAT_REG_NO"] = "";
            dtPartner.Rows.Add(objDr1);

            objSims.PartnerTable = dtPartner;

            strSO = objSims.ReturnSalesOrder();
            lblmsg.Text = strSO;
        }
    
}
