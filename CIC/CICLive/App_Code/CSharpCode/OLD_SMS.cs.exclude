using System;
using System.Data;
using System.Configuration;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using System.Data.SqlClient;

/// <summary>
/// Summary description for SMS
/// </summary>
public class SMS
{
    public string MessageFrom
    { get; set; }
    public string Message
    { get; set; }
    public string ReceiverID
    {
        get;
        set;
    }
    public string strType
    { get; set; }
    public string Complaint_refNo
    {
        get;
        set;
    }
    public int ReturnValue
    { get; set; }

    public SMS()
    {
        //
        // TODO: Add constructor logic here
        //
    }

    SqlDataAccessLayer objSql = new SqlDataAccessLayer();
    string strMsg;


    public int SaveData(string strType)
    {
        SqlParameter[] sqlParamI =
        {
            new SqlParameter("@MessageOut",SqlDbType.VarChar,200),
            new SqlParameter("@Return_Value",SqlDbType.Int),
            new SqlParameter("@Type",strType),        
            new SqlParameter("@Message",this.Message),  
            new SqlParameter("@MessageFrom",this.MessageFrom),
            new SqlParameter("@ReceiverID",this.ReceiverID),
            new SqlParameter("@Complaint_refNo",this.Complaint_refNo)   
        };
        sqlParamI[0].Direction = ParameterDirection.Output;
        sqlParamI[1].Direction = ParameterDirection.ReturnValue;
        objSql.ExecuteNonQuery(CommandType.StoredProcedure, "uspInboundSMS", sqlParamI);
        if (int.Parse(sqlParamI[1].Value.ToString()) == -1)
        {
            this.ReturnValue = int.Parse(sqlParamI[1].Value.ToString());
        }
        strMsg = sqlParamI[0].Value.ToString();
        sqlParamI = null;
        return ReturnValue;
    }
}
