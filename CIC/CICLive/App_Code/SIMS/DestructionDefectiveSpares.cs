using System;
using System.Data;
using System.Configuration;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using System.Data.SqlClient;

/// <summary>
/// Description: This module is designed to make Entry for Save Destructive Defective Spare.
/// Name: Mahesh Bhati
/// Date: 05-Feb-2010
/// /// </summary>
public class DestructionDefectiveSpares
{
    SIMSSqlDataAccessLayer objSql = new SIMSSqlDataAccessLayer();
    DataSet dsCommon = new DataSet();
    string strMsg;
    SIMSCommonClass objCommonClass = new SIMSCommonClass();

	public DestructionDefectiveSpares()
	{
		//
		// TODO: Add constructor logic here
		//
	}

    #region Properties and Variables

    public int Destruction_Def_Spare_Id
    { get; set; }
    public string ASC_Code
    { get; set; }
    public string Transaction_Date
    { get; set; }
    public string Transaction_No_Auto
    { get; set; }
    public string CGL_Branch_Auto
    { get; set; }
    public string CG_Engineer_Name
    { get; set; }
    public string Claim_No
    { get; set; }
    public string Claim_Approval_Id
    { get; set; }
    public string Spare_Code
    { get; set; }
    public int Spare_Description
    { get; set; }
    public string UOM
    { get; set; }
    public string Defective_Loc_Code
    { get; set; }
    public string Stock
    { get; set; }
    public string Destroyed_Qty
    { get; set; }
    public string Balanced_Qty
    { get; set; }
    public string ActionBy
    { get; set; }
    public string ActiveFlag
    { get; set; }
    public string ActionType
    { get; set; }
    public int ReturnValue
    { get; set; }
    public string MessageOut
    { get; set; }
    public string SearchCriteria
    { get; set; }
    public string SearchColumnName
    { get; set; }
    public string SortColumnName
    { get; set; }
    public string SortOrderBy
    { get; set; }
    public string PrefixString
    { get; set; }
    public string AutoGeneratedNumber
    { get; set; }

    #endregion Properties and Variables

    #region Bind Grid
    public DataSet BindGridSalesOrder(GridView gvComm, Label lblRowCount)
    {
        SqlParameter[] sqlParamSrh =
        {
            new SqlParameter("@MessageOut",SqlDbType.VarChar,1000),
            new SqlParameter("@Return_Value",SqlDbType.Int),
            new SqlParameter("@Active_Flag","1"),//FOR SOFT DELETE OR FILTERING
            new SqlParameter("@Type",this.ActionType),
            
        };
        sqlParamSrh[0].Direction = ParameterDirection.Output;
        sqlParamSrh[1].Direction = ParameterDirection.ReturnValue;
        dsCommon = objSql.ExecuteDataset(CommandType.StoredProcedure, "uspDestructionDefectiveSpares", sqlParamSrh);
        ReturnValue = Convert.ToInt32(sqlParamSrh[1].Value.ToString());
        MessageOut = sqlParamSrh[0].Value.ToString();
        if (ReturnValue != -1)
        {
            lblRowCount.Text = dsCommon.Tables[0].Rows.Count.ToString();
            objCommonClass.SortGridData(gvComm, dsCommon, this.SortColumnName, this.SortOrderBy);
        }
        return dsCommon;
    }
    #endregion

    #region Functions For save data
    public void SaveData()
    {
        SqlParameter[] sqlParamI =
        {
            new SqlParameter("@MessageOut",SqlDbType.VarChar,200),
            new SqlParameter("@Return_Value",SqlDbType.Int),
            new SqlParameter("@Type",this.ActionType),
            new SqlParameter("@CreatedBy",this.ActionBy),
            new SqlParameter("@Active_Flag",1),
            new SqlParameter("@ASC_Code",this.ASC_Code),
            new SqlParameter("@Transaction_Date",this.Transaction_Date),
            new SqlParameter("@Transaction_No_Auto",this.AutoGeneratedNumber),
            new SqlParameter("@CGL_Branch_Auto",this.CGL_Branch_Auto),
            new SqlParameter("@CG_Engineer_Name",this.CG_Engineer_Name),
            new SqlParameter("@Claim_No",this.Claim_No),
            new SqlParameter("@Spare_Code",this.Spare_Code),
            new SqlParameter("@Spare_Description",this.Spare_Description),
            new SqlParameter("@UOM",this.UOM),
            new SqlParameter("@Defective_Loc_Code",this.Defective_Loc_Code),
            new SqlParameter("@Stock",this.Stock),
            new SqlParameter("@Destroyed_Qty",this.Destroyed_Qty),
            new SqlParameter("@Balanced_Qty",this.Balanced_Qty)
           
            
        };

        sqlParamI[0].Direction = ParameterDirection.Output;
        sqlParamI[1].Direction = ParameterDirection.ReturnValue;
        objSql.ExecuteNonQuery(CommandType.StoredProcedure, "uspDestructionDefectiveSpares", sqlParamI);
        this.ReturnValue = Convert.ToInt32(sqlParamI[1].Value.ToString());
        this.MessageOut = sqlParamI[0].Value.ToString();
        sqlParamI = null;

    }
    #endregion Functions For save data

    #region Get GET_UNIQUE_KEY_VALUE

    public string GET_UNIQUE_KEY_VALUE(string strASC_Code)
    {
        SqlParameter[] sqlParamG =
        {
            new SqlParameter("@Type","GET_UNIQUE_KEY_VALUE"),
            new SqlParameter("@COLUMNNAME","Transaction_No_Auto"),
            new SqlParameter("@ASC_Id",strASC_Code)
        };
        string strUNIQUEKEY = "";
        strUNIQUEKEY = Convert.ToString(objSql.ExecuteScalar(CommandType.StoredProcedure, "uspSpareStockTransferASC", sqlParamG));
        return strUNIQUEKEY;
    }
    public string GetAutoGeneratedNumber()
    {
        string AutoGeneratedNumber = string.Empty;
        SqlParameter[] param = {
                                    new SqlParameter("@Type", "GET_AUTOGENERATED_NUMBER"),
                                    new SqlParameter("@PrefixString", this.PrefixString)                                                                                                    
                               };

        AutoGeneratedNumber = Convert.ToString(objSql.ExecuteScalar(CommandType.StoredProcedure, "uspSpareSalePurchaseByASC", param));
        return AutoGeneratedNumber;
    }
    #endregion Get GET_UNIQUE_KEY_VALUE

    #region For Reading Values from database
    public void BindASCName(DropDownList ddlASCName)
    {
        DataSet ds = new DataSet();
        SqlParameter sqlParam = new SqlParameter("@Type", "SELECT_ASC_NAME_FILL");
        ds = objSql.ExecuteDataset(CommandType.StoredProcedure, "uspDestructionDefectiveSpares", sqlParam);
        ddlASCName.DataSource = ds;
        ddlASCName.DataTextField = "ASC_Name";
        ddlASCName.DataValueField = "ASC_Code";
        ddlASCName.DataBind();
        ddlASCName.Items.Insert(0, new ListItem("Select", "Select"));
        ds = null;
        sqlParam = null;
    }
    public void BindClaimNumber(DropDownList ddlClaimNo)
    {
        DataSet ds = new DataSet();
        SqlParameter sqlParam = new SqlParameter("@Type", "SELECT_CLAIM_FILL");
        ds = objSql.ExecuteDataset(CommandType.StoredProcedure, "uspDestructionDefectiveSpares", sqlParam);
        ddlClaimNo.DataSource = ds;
        ddlClaimNo.DataTextField = "Claim_No";
        ddlClaimNo.DataValueField = "Complaint_Claim_Generation_Id";
        ddlClaimNo.DataBind();
        ddlClaimNo.Items.Insert(0, new ListItem("Select", "Select"));
        ds = null;
        sqlParam = null;
    }

     #endregion For Reading Values from database
}
