using System;
using System.Data;
using System.Configuration;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using System.Data.SqlClient;

/// <summary>
/// Summary description for SpareSalePurchaseByASC
/// </summary>
public class SpareSalePurchaseByASC
{
    //:IDisposable
    SIMSSqlDataAccessLayer objSql = new SIMSSqlDataAccessLayer();
   
    string strMsg;
	
    #region Properties and Variables

    public int SpareId
    { get; set; }
    public int VendorId
    { get; set; }
    public int Asc_Code
    { get; set; }
    public string Mov_Type_Text
    { get; set; }
    public int Mov_Type_Id
    { get; set; }
    public int ProductDivision_Id
    { get; set; }
    public int Branch_Id
    { get; set; }
    public int Loc_Id
    { get; set; }
    public int Def_Loc_Id
    { get; set; }
    public int CurrentStock
    { get; set; }
    public int StockAsPerLocation
    { get; set; }
    public decimal Rate
    { get; set; }
    public string ComplaintNo
    { get; set; }
    public DataTable DataTableSpareSalePurchaseByASC
    { get; set; }
    public int Quantity
    {get;set;}
    public int Action_Type_Id
    {get;set;}
    public string Comments
    { get; set; }
    public string MessageOut
    { get; set; }
    public int ReturnValue
    { get; set; }
    public string PrefixString
    { get; set; }
    public string AutoGeneratedNumber
    { get; set; }
    public string Spare_Desc
    { get; set; }

    #endregion 

   

    #region Functions Insert Data Spare_Sale_Purchase_ASC Table

   public string SaveData(string strType)
    {
        SqlParameter[] sqlParamI =
        {
            new SqlParameter("@MessageOut",SqlDbType.VarChar,200),
            new SqlParameter("@Return_Value",SqlDbType.Int),
            new SqlParameter("@Type",strType),
            new SqlParameter("@Transaction_No",this.AutoGeneratedNumber),
            new SqlParameter("@Asc_Code",this.Asc_Code),
            new SqlParameter("@ProductDivision",this.ProductDivision_Id),
            new SqlParameter("@Mov_Type_Id",this.Mov_Type_Id),
            new SqlParameter("@Mov_Type_Text",this.Mov_Type_Text),
            new SqlParameter("@Vendor_Id",this.VendorId),
            new SqlParameter("@SpareId",this.SpareId),
            new SqlParameter("@Loc_Id",this.Loc_Id),
            new SqlParameter("@Def_Loc_Id",this.Def_Loc_Id),
            new SqlParameter("@Current_Stock",this.CurrentStock),
            new SqlParameter("@Quantity",this.Quantity),
            new SqlParameter("@QtyAsPerLocation",this.StockAsPerLocation),
            new SqlParameter("@Action_Type_Id",this.Action_Type_Id),         
            new SqlParameter("@Comments",this.Comments),
            new SqlParameter("@EmpCode",Membership.GetUser().UserName.ToString())
          
           
        };
        sqlParamI[0].Direction = ParameterDirection.Output;
        sqlParamI[1].Direction = ParameterDirection.ReturnValue;
        objSql.ExecuteNonQuery(CommandType.StoredProcedure, "uspSpareSalePurchaseByASC", sqlParamI);
        if (int.Parse(sqlParamI[1].Value.ToString()) == -1)
        {
            this.ReturnValue = int.Parse(sqlParamI[1].Value.ToString());
        }
        strMsg = sqlParamI[0].Value.ToString();
        sqlParamI = null;
        return strMsg;
    }
    #endregion

    # region Functions to bind Drop-down List
    public void BindDDLDivision(DropDownList ddlDivision,int intASCID)
    {
        DataSet dsDivision = new DataSet();
        SqlParameter[] sqlParam = 
        {
            new SqlParameter("@Type", "SELECT_ALL_UNITCODE_UNITSNO"),
            new SqlParameter("@Asc_Code",intASCID)
        };
        dsDivision = objSql.ExecuteDataset(CommandType.StoredProcedure, "uspSpareSalePurchaseByASC", sqlParam);
        ddlDivision.DataSource = dsDivision;
        ddlDivision.DataTextField = dsDivision.Tables[0].Columns[1].ToString();
        ddlDivision.DataValueField = dsDivision.Tables[0].Columns[0].ToString();
        ddlDivision.DataBind();
        ddlDivision.Items.Insert(0, new ListItem("Select", "0"));
        dsDivision = null;
        sqlParam = null;
    }

    public void BindDDLMovType(DropDownList ddlMovType)
    {
        DataSet dsMovType = new DataSet();
        SqlParameter[] sqlParam = 
        {
            new SqlParameter("@Type", "SELECT_ALL_MOVE_TYPE")
           
        };
        dsMovType = objSql.ExecuteDataset(CommandType.StoredProcedure, "uspSpareSalePurchaseByASC", sqlParam);

        //////  23 june 2011 only two options visible to SC_SIMS
        if (dsMovType.Tables[0].Rows.Count > 2)
        {
            if (HttpContext.Current.User.IsInRole("SC_SIMS"))
            {
                for (int i = 2; i < dsMovType.Tables[0].Rows.Count; i++)
                {
                    dsMovType.Tables[0].Rows[i].Delete();
                }
                dsMovType.AcceptChanges();
            }
        }
        ///////////////////////////////////////////////////


        ddlMovType.DataSource = dsMovType;
        ddlMovType.DataTextField = dsMovType.Tables[0].Columns[0].ToString();
        ddlMovType.DataValueField = dsMovType.Tables[0].Columns[2].ToString();
        ddlMovType.DataBind();
        ddlMovType.Items.Insert(0, new ListItem("Select", "0"));
        dsMovType = null;
        sqlParam = null;
    }

    public void SelectActionType()
    {
        DataSet ds = new DataSet();
        SqlParameter[] sqlParamG =
        {
            new SqlParameter("@Type","SELECT_ACTION_TYPE"),
            new SqlParameter("@SpareConsume_Id", this.Mov_Type_Id)
        };

        ds = objSql.ExecuteDataset(CommandType.StoredProcedure, "uspSpareSalePurchaseByASC", sqlParamG);
        if (ds.Tables[0].Rows.Count > 0)
        {
            this.Action_Type_Id = Convert.ToInt32(ds.Tables[0].Rows[0]["Action_Type"].ToString());
           
        }
        ds = null;
    }

    public void BindDDLLocation(DropDownList ddl,int intASCID)
    {
        DataSet ds = new DataSet();
        SqlParameter[] param = {
                                    new SqlParameter("@Type", "SELECT_ALL_LOCATION_ACCORDINGTO_ASC_AND_SPARE"),
                                    new SqlParameter("@Asc_Code", intASCID)
                                    //new SqlParameter("@ProductDivision", this.ProductDivision_Id),
                                    //new SqlParameter("@SpareId", this.SpareId),
                                    //new SqlParameter("@Mov_Type_Id",MovTypeId)
                                 };

        ds = objSql.ExecuteDataset(CommandType.StoredProcedure, "uspSpareSalePurchaseByASC", param);
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddl.DataSource = ds.Tables[0];
            ddl.DataValueField = "Loc_Id";
            ddl.DataTextField = "Loc_Name";
            ddl.DataBind();
           //ddl.Items.Insert(0, new ListItem("Select", "0"));
        }
        else
        {
            ddl.Items.Clear();
           //ddl.Items.Insert(0, new ListItem("Select", "0"));
        }
    }
    public void BindDDLDefLocation(DropDownList ddl, int intASCID)
    {
        DataSet ds = new DataSet();
        SqlParameter[] param = {
                                    new SqlParameter("@Type", "SELECT_DEF_LOCATION_ACCORDINGTO_ASC_AND_SPARE"),
                                    new SqlParameter("@Asc_Code",intASCID)
                                    //new SqlParameter("@ProductDivision", this.ProductDivision_Id),
                                    //new SqlParameter("@SpareId", this.SpareId)
                                 };

        ds = objSql.ExecuteDataset(CommandType.StoredProcedure, "uspSpareSalePurchaseByASC", param);
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddl.DataSource = ds.Tables[0];
            ddl.DataValueField = "Loc_Id";
            ddl.DataTextField = "Loc_Name";
            ddl.DataBind();
            //ddl.Items.Insert(0, new ListItem("Select", "0"));
        }
        else
        {
            ddl.Items.Clear();
            //ddl.Items.Insert(0, new ListItem("Select", "0"));
        }
    }
    public void BindDDLVendor(DropDownList ddl, int intProductDivision)
    {
        DataSet ds = new DataSet();
        SqlParameter[] param = {
                                    new SqlParameter("@Type", "SELECT_ALL_VENDOR_ACCORDINGTO_PRODUCT_DIVISION"),
                                    new SqlParameter("@ProductDivision", intProductDivision) ,
                                    new SqlParameter("@Asc_Code", Asc_Code )   
                               };

        ds = objSql.ExecuteDataset(CommandType.StoredProcedure, "uspSpareSalePurchaseByASC", param);
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddl.DataSource = ds.Tables[0];
            ddl.DataValueField = "Vendor_Id";
            ddl.DataTextField = "Vendor_Name";
            ddl.DataBind();
            ddl.Items.Insert(0, new ListItem("Select", "0"));
        }
        else
        {
            ddl.Items.Clear();
            ddl.Items.Insert(0, new ListItem("Select", "0"));
        }
    }
    public void BindDDLSpareCode(DropDownList ddl, int intDivision,string asc_id)
    {
        DataSet ds = new DataSet();
        SqlParameter[] param = {
                                    new SqlParameter("@Type", "SELECT_ALL_SPARECODE_ACCORDINGTO_DIVISION"),
                                    new SqlParameter("@ProductDivision", intDivision),
                                    new SqlParameter("@Vendor_Id", this.VendorId),
                                    new SqlParameter("@Spare_Desc",this.Spare_Desc),
                                    new SqlParameter("@Asc_Code", asc_id)
                                 };

        ds = objSql.ExecuteDataset(CommandType.StoredProcedure, "uspSpareSalePurchaseByASC", param);
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddl.DataSource = ds.Tables[0];
            ddl.DataValueField = "SPARE_ID";
            ddl.DataTextField = "SPARE_DESC";
            ddl.DataBind();
            ddl.Items.Insert(0, new ListItem("Select", "0"));
        }
        else
        {
            ddl.Items.Clear();
            ddl.Items.Insert(0, new ListItem("Select", "0"));
        }
    }
    #endregion Functions to bind Drop-down List

    # region Functions to bind GridRowCurrentStockAndRate
    public void BindGridRowCurrentStockAndRate()
    {
        DataSet ds = new DataSet();
        SqlParameter[] param = {
                                    new SqlParameter("@Type", "SELECT_CURRENTSTOCK_AND_RATE_ACCORDINGTO_SPARECODE"),
                                    new SqlParameter("@SpareId", this.SpareId),
                                    new SqlParameter("@Asc_Code", this.Asc_Code),
                                    new SqlParameter("@ProductDivision", this.ProductDivision_Id)
                                 };

        ds = objSql.ExecuteDataset(CommandType.StoredProcedure, "uspSpareSalePurchaseByASC", param);
        if (ds.Tables[0].Rows.Count > 0)
        {
            this.CurrentStock = int.Parse(ds.Tables[0].Rows[0]["Current Stock"].ToString());
            this.Rate = decimal.Parse(ds.Tables[0].Rows[0]["Rate"].ToString());
            ds = null;
        }
    }
    #endregion Functions to bind GridRowCurrentStockAndRate

    # region Functions to bind Location Qty according to Loc Id and Spare Id
    public void BindLocQtyAccordingToLocIdAndSpareId()
    {
        DataSet ds = new DataSet();
        SqlParameter[] param = {
                                    new SqlParameter("@Type", "SELECT_QTY_ACCORDINGTO_SPARECODE_AND_LOCATION"),
                                    new SqlParameter("@Asc_Code", this.Asc_Code),
                                    new SqlParameter("@ProductDivision",this.ProductDivision_Id),
                                    new SqlParameter("@SpareId", this.SpareId),
                                    new SqlParameter("@Loc_Id", this.Loc_Id),                                                                    
                                 };

        ds = objSql.ExecuteDataset(CommandType.StoredProcedure, "uspSpareSalePurchaseByASC", param);
        if (ds.Tables[0].Rows.Count > 0)
        {
            this.StockAsPerLocation = int.Parse(ds.Tables[0].Rows[0]["Qty"].ToString());            
            ds = null;
        }
    }
    #endregion Functions to bind Location Qty according to Loc Id and Spare Id

    #region Check for duplicate rows

    public bool ChkForDuplicateRows()
    {
        bool IsRowExists = false;
        SqlParameter[] sqlParamI =
            {
                new SqlParameter("@MessageOut",SqlDbType.VarChar,1000),                
                new SqlParameter("@Type","CHECK_FOR_DUPLICATE_ROWS"),                
                new SqlParameter("@ComplaintNo",this.ComplaintNo),
                new SqlParameter("@SpareId",this.SpareId)
            };
        sqlParamI[0].Direction = ParameterDirection.Output;
        SqlDataReader dr = objSql.ExecuteReader(CommandType.StoredProcedure, "uspSpareSalePurchaseByASC", sqlParamI);
        dr.Read();
        if (dr.HasRows == true)
        {
            IsRowExists = true;
        }
        sqlParamI = null;

        return IsRowExists;
    }

    #endregion Check for duplicate rows

    # region Function to Get the AutoGenerated Number
    public string GetAutoGeneratedNumber()
    {
        string AutoGeneratedNumber = string.Empty;
        SqlParameter[] param = {
                                    new SqlParameter("@Type", "GET_AUTOGENERATED_NUMBER"),
                                    new SqlParameter("@PrefixString", this.PrefixString)                                                                                                    
                               };

        AutoGeneratedNumber = Convert.ToString(objSql.ExecuteScalar(CommandType.StoredProcedure, "uspSpareSalePurchaseByASC", param));
        return AutoGeneratedNumber;
    }
    #endregion Function to Get the AutoGenerated Number

    # region Function to Update the Spare Qunatity of MstStorageLocation
    ////public void Fn_Update_MstStorageLocationAndMain_Storage_TransactionDBTable()
    //{
    //    try
    //    {
    //        DataTable dtSpareSalePurchaseByASC = this.DataTableSpareSalePurchaseByASC;
    //        for(int i=0; i<dtSpareSalePurchaseByASC.Rows.Count; i++)
    //        {
    //            SqlParameter[] Param = {
    //                                            new SqlParameter("@MessageOut",SqlDbType.VarChar,200),
    //                                            new SqlParameter("Return_Value", SqlDbType.Int),
    //                                            new SqlParameter("@Type","UPDATE_QTY_OF_ALL_STORAGE_LOCATIONS"),
    //                                            new SqlParameter("@Asc_Code",Convert.ToInt32(dtSpareSalePurchaseByASC.Rows[i]["ASC_Id"].ToString())),
    //                                            new SqlParameter("@ProductDivision",Convert.ToInt32(dtSpareSalePurchaseByASC.Rows[i]["ProductDivision_Id"].ToString())),                                                                                                                                                                                                                                                             
    //                                            new SqlParameter("@SpareId",Convert.ToInt32(dtSpareSalePurchaseByASC.Rows[i]["Spare_Id"].ToString())),
    //                                            new SqlParameter("@Mov_Type_Id",Convert.ToInt32(dtSpareSalePurchaseByASC.Rows[i]["Mov_Type_Id"].ToString())),
    //                                            new SqlParameter("@Action_Type_Id",Convert.ToInt32(dtSpareSalePurchaseByASC.Rows[i]["Action_Type_Id"].ToString())),
    //                                            new SqlParameter("@Loc_Id",Convert.ToInt32(dtSpareSalePurchaseByASC.Rows[i]["Loc_Id"].ToString())),
    //                                            new SqlParameter("@Transaction_No",this.AutoGeneratedNumber),
    //                                            new SqlParameter("@Def_Loc_Id",Convert.ToInt32(dtSpareSalePurchaseByASC.Rows[i]["Def_Loc_Id"].ToString().Equals("") ? "0" : dtSpareSalePurchaseByASC.Rows[i]["Def_Loc_Id"].ToString())),
    //                                            new SqlParameter("@EmpCode",dtSpareSalePurchaseByASC.Rows[i]["Created_By"].ToString())
    //                                       };

    //            Param[0].Direction = ParameterDirection.Output;
    //            Param[1].Direction = ParameterDirection.ReturnValue;

    //            objSql.ExecuteNonQuery(CommandType.StoredProcedure, "uspSpareSalePurchaseByASC", Param);

    //            this.ReturnValue = int.Parse(Param[1].Value.ToString());
    //            this.MessageOut = "Records Saved Successfully!";//Param[0].Value.ToString();
    //            Param = null;
    //        }
    //    }
    //    catch (Exception ex)
    //    {
    //        this.ReturnValue = -1;
    //        this.MessageOut = "Records not Saved!";
    //        throw ex;
    //    }
        
    //}
    #endregion 

}
